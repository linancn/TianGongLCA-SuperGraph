schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

input Boolean_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _cast: Boolean_cast_exp
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

input Int_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _cast: Int_cast_exp
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

scalar bytea

"""
Boolean expression to compare columns of type "bytea". All fields are combined with logical 'AND'.
"""
input bytea_comparison_exp {
  _eq: bytea
  _gt: bytea
  _gte: bytea
  _in: [bytea!]
  _is_null: Boolean
  _lt: bytea
  _lte: bytea
  _neq: bytea
  _nin: [bytea!]
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_3011_with_methods__actors {
  address: String
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_3011_with_methods__actors_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__actors_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__actors!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_3011_with_methods__actors_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__actors_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__actors_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__actors_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__actors_append_input {
  category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__actors". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp!]
  address: String_comparison_exp
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  city: String_comparison_exp
  country: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  email: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  telefax: String_comparison_exp
  telephone: String_comparison_exp
  version: String_comparison_exp
  website: String_comparison_exp
  zip_code: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_delete_key_input {
  category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_insert_input {
  address: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__actors_max_fields {
  address: String
  category_id: String
  category_name: String
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__actors_min_fields {
  address: String
  category_id: String
  category_name: String
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_3011_with_methods__actors_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__actors!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__actors".
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_order_by {
  address: order_by
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  city: order_by
  country: order_by
  data_name: order_by
  description: order_by
  email: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  telefax: order_by
  telephone: order_by
  version: order_by
  website: order_by
  zip_code: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__actors_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
enum ecoinvent_38_cutoff_3011_with_methods__actors_select_column {
  """column name"""
  address

  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  city

  """column name"""
  country

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  email

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  telefax

  """column name"""
  telephone

  """column name"""
  version

  """column name"""
  website

  """column name"""
  zip_code
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__actors"
"""
input ecoinvent_38_cutoff_3011_with_methods__actors_set_input {
  address: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__bin_sources {
  bin_sources: bytea
  id: String!
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__bin_sources!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__bin_sources_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__bin_sources_min_fields
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__bin_sources". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp!]
  bin_sources: bytea_comparison_exp
  id: String_comparison_exp
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
input ecoinvent_38_cutoff_3011_with_methods__bin_sources_insert_input {
  bin_sources: bytea
  id: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__bin_sources_max_fields {
  id: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__bin_sources_min_fields {
  id: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__bin_sources_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__bin_sources!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__bin_sources".
"""
input ecoinvent_38_cutoff_3011_with_methods__bin_sources_order_by {
  bin_sources: order_by
  id: order_by
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
enum ecoinvent_38_cutoff_3011_with_methods__bin_sources_select_column {
  """column name"""
  bin_sources

  """column name"""
  id
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
"""
input ecoinvent_38_cutoff_3011_with_methods__bin_sources_set_input {
  bin_sources: bytea
  id: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__categories {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  id: String!
  last_change: timestamptz
  model_type: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__categories_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__categories_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__categories!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__categories_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__categories_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__categories_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__categories_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__categories_append_input {
  category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__categories". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  model_type: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_delete_key_input {
  category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__categories_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__categories_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__categories_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__categories!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__categories".
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  id: order_by
  last_change: order_by
  model_type: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__categories_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
enum ecoinvent_38_cutoff_3011_with_methods__categories_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  model_type

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__categories"
"""
input ecoinvent_38_cutoff_3011_with_methods__categories_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_3011_with_methods__currencies {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__currencies!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate_fields {
  avg: ecoinvent_38_cutoff_3011_with_methods__currencies_avg_fields
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__currencies_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__currencies_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__currencies_min_fields
  stddev: ecoinvent_38_cutoff_3011_with_methods__currencies_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_3011_with_methods__currencies_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_3011_with_methods__currencies_stddev_samp_fields
  sum: ecoinvent_38_cutoff_3011_with_methods__currencies_sum_fields
  var_pop: ecoinvent_38_cutoff_3011_with_methods__currencies_var_pop_fields
  var_samp: ecoinvent_38_cutoff_3011_with_methods__currencies_var_samp_fields
  variance: ecoinvent_38_cutoff_3011_with_methods__currencies_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_append_input {
  category_path: jsonb
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_avg_fields {
  conversion_factor: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__currencies". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  code: String_comparison_exp
  conversion_factor: float8_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  reference_currency_id: String_comparison_exp
  reference_currency_name: String_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_delete_key_input {
  category_path: String
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_inc_input {
  conversion_factor: float8
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_max_fields {
  category_id: String
  category_name: String
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_min_fields {
  category_id: String
  category_name: String
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__currencies!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__currencies".
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  code: order_by
  conversion_factor: order_by
  data_name: order_by
  description: order_by
  id: order_by
  last_change: order_by
  library: order_by
  reference_currency_id: order_by
  reference_currency_name: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
enum ecoinvent_38_cutoff_3011_with_methods__currencies_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  code

  """column name"""
  conversion_factor

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  reference_currency_id

  """column name"""
  reference_currency_name

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__currencies"
"""
input ecoinvent_38_cutoff_3011_with_methods__currencies_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_stddev_fields {
  conversion_factor: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_stddev_pop_fields {
  conversion_factor: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_stddev_samp_fields {
  conversion_factor: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_sum_fields {
  conversion_factor: float8
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_var_pop_fields {
  conversion_factor: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_var_samp_fields {
  conversion_factor: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_3011_with_methods__currencies_variance_fields {
  conversion_factor: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_3011_with_methods__dq_systems {
  data_name: String
  description: String
  has_uncertainties: Boolean
  id: String
  indicators(
    """JSON select path"""
    path: String
  ): json
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__dq_systems!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__dq_systems_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__dq_systems_min_fields
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__dq_systems". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  has_uncertainties: Boolean_comparison_exp
  id: String_comparison_exp
  indicators: json_comparison_exp
  last_change: String_comparison_exp
  source_id: String_comparison_exp
  source_name: String_comparison_exp
  version: String_comparison_exp
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
input ecoinvent_38_cutoff_3011_with_methods__dq_systems_insert_input {
  data_name: String
  description: String
  has_uncertainties: Boolean
  id: String
  indicators: json
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__dq_systems_max_fields {
  data_name: String
  description: String
  id: String
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__dq_systems_min_fields {
  data_name: String
  description: String
  id: String
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_3011_with_methods__dq_systems_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__dq_systems!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__dq_systems".
"""
input ecoinvent_38_cutoff_3011_with_methods__dq_systems_order_by {
  data_name: order_by
  description: order_by
  has_uncertainties: order_by
  id: order_by
  indicators: order_by
  last_change: order_by
  source_id: order_by
  source_name: order_by
  version: order_by
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
enum ecoinvent_38_cutoff_3011_with_methods__dq_systems_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  has_uncertainties

  """column name"""
  id

  """column name"""
  indicators

  """column name"""
  last_change

  """column name"""
  source_id

  """column name"""
  source_name

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
"""
input ecoinvent_38_cutoff_3011_with_methods__dq_systems_set_input {
  data_name: String
  description: String
  has_uncertainties: Boolean
  id: String
  indicators: json
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_3011_with_methods__flow_properties {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  unit_group_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__flow_properties!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__flow_properties_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__flow_properties_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_append_input {
  category_path: jsonb
  unit_group_category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__flow_properties". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  flow_property_type: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  unit_group_category_path: jsonb_comparison_exp
  unit_group_id: String_comparison_exp
  unit_group_name: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_delete_at_path_input {
  category_path: [String!]
  unit_group_category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_delete_elem_input {
  category_path: Int
  unit_group_category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_delete_key_input {
  category_path: String
  unit_group_category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_category_path: jsonb
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__flow_properties_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__flow_properties_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_3011_with_methods__flow_properties_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__flow_properties!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__flow_properties".
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  flow_property_type: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  unit_group_category_path: order_by
  unit_group_id: order_by
  unit_group_name: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_prepend_input {
  category_path: jsonb
  unit_group_category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
enum ecoinvent_38_cutoff_3011_with_methods__flow_properties_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  flow_property_type

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  unit_group_category_path

  """column name"""
  unit_group_id

  """column name"""
  unit_group_name

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
"""
input ecoinvent_38_cutoff_3011_with_methods__flow_properties_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_category_path: jsonb
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_3011_with_methods__flows {
  cas: String
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  flow_properties(
    """JSON select path"""
    path: String
  ): jsonb
  flow_type: String
  formula: String
  id: String!
  infrastructure_flow: Boolean
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_3011_with_methods__flows_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__flows_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__flows!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_3011_with_methods__flows_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__flows_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__flows_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__flows_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__flows_append_input {
  category_path: jsonb
  flow_properties: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__flows". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp!]
  cas: String_comparison_exp
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  flow_properties: jsonb_comparison_exp
  flow_type: String_comparison_exp
  formula: String_comparison_exp
  id: String_comparison_exp
  infrastructure_flow: Boolean_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  location_id: String_comparison_exp
  location_name: String_comparison_exp
  synonyms: String_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_delete_at_path_input {
  category_path: [String!]
  flow_properties: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_delete_elem_input {
  category_path: Int
  flow_properties: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_delete_key_input {
  category_path: String
  flow_properties: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_insert_input {
  cas: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_properties: jsonb
  flow_type: String
  formula: String
  id: String
  infrastructure_flow: Boolean
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__flows_max_fields {
  cas: String
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__flows_min_fields {
  cas: String
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_3011_with_methods__flows_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__flows!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__flows".
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_order_by {
  cas: order_by
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  flow_properties: order_by
  flow_type: order_by
  formula: order_by
  id: order_by
  infrastructure_flow: order_by
  last_change: order_by
  library: order_by
  location_id: order_by
  location_name: order_by
  synonyms: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__flows_prepend_input {
  category_path: jsonb
  flow_properties: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
enum ecoinvent_38_cutoff_3011_with_methods__flows_select_column {
  """column name"""
  cas

  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  flow_properties

  """column name"""
  flow_type

  """column name"""
  formula

  """column name"""
  id

  """column name"""
  infrastructure_flow

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  location_id

  """column name"""
  location_name

  """column name"""
  synonyms

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__flows"
"""
input ecoinvent_38_cutoff_3011_with_methods__flows_set_input {
  cas: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_properties: jsonb
  flow_type: String
  formula: String
  id: String
  infrastructure_flow: Boolean
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_categories {
  data_name: String
  description: String
  id: String!
  impact_factors(
    """JSON select path"""
    path: String
  ): jsonb
  reference_unit_name: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_append_input {
  impact_factors: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__lcia_categories". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  impact_factors: jsonb_comparison_exp
  reference_unit_name: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_delete_at_path_input {
  impact_factors: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_delete_elem_input {
  impact_factors: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_delete_key_input {
  impact_factors: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_insert_input {
  data_name: String
  description: String
  id: String
  impact_factors: jsonb
  reference_unit_name: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_categories_max_fields {
  data_name: String
  description: String
  id: String
  reference_unit_name: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_categories_min_fields {
  data_name: String
  description: String
  id: String
  reference_unit_name: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_categories_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__lcia_categories".
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_order_by {
  data_name: order_by
  description: order_by
  id: order_by
  impact_factors: order_by
  reference_unit_name: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_prepend_input {
  impact_factors: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
enum ecoinvent_38_cutoff_3011_with_methods__lcia_categories_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  impact_factors

  """column name"""
  reference_unit_name

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_categories_set_input {
  data_name: String
  description: String
  id: String
  impact_factors: jsonb
  reference_unit_name: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_methods {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String!
  impact_categories(
    """JSON select path"""
    path: String
  ): jsonb
  last_change: timestamptz
  nw_sets(
    """JSON select path"""
    path: String
  ): jsonb
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_append_input {
  impact_categories: jsonb
  nw_sets: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__lcia_methods". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  impact_categories: jsonb_comparison_exp
  last_change: timestamptz_comparison_exp
  nw_sets: jsonb_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_delete_at_path_input {
  impact_categories: [String!]
  nw_sets: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_delete_elem_input {
  impact_categories: Int
  nw_sets: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_delete_key_input {
  impact_categories: String
  nw_sets: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_insert_input {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  impact_categories: jsonb
  last_change: timestamptz
  nw_sets: jsonb
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_methods_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_methods_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_3011_with_methods__lcia_methods_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__lcia_methods".
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_order_by {
  category_id: order_by
  category_name: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  id: order_by
  impact_categories: order_by
  last_change: order_by
  nw_sets: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_prepend_input {
  impact_categories: jsonb
  nw_sets: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
enum ecoinvent_38_cutoff_3011_with_methods__lcia_methods_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  impact_categories

  """column name"""
  last_change

  """column name"""
  nw_sets

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
"""
input ecoinvent_38_cutoff_3011_with_methods__lcia_methods_set_input {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  impact_categories: jsonb
  last_change: timestamptz
  nw_sets: jsonb
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_3011_with_methods__locations {
  code: String
  data_name: String
  description: String
  geometry_coordinates(
    """JSON select path"""
    path: String
  ): jsonb
  geometry_geometries(
    """JSON select path"""
    path: String
  ): jsonb
  geometry_type: String
  id: String!
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_3011_with_methods__locations_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__locations_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__locations!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_3011_with_methods__locations_aggregate_fields {
  avg: ecoinvent_38_cutoff_3011_with_methods__locations_avg_fields
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__locations_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__locations_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__locations_min_fields
  stddev: ecoinvent_38_cutoff_3011_with_methods__locations_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_3011_with_methods__locations_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_3011_with_methods__locations_stddev_samp_fields
  sum: ecoinvent_38_cutoff_3011_with_methods__locations_sum_fields
  var_pop: ecoinvent_38_cutoff_3011_with_methods__locations_var_pop_fields
  var_samp: ecoinvent_38_cutoff_3011_with_methods__locations_var_samp_fields
  variance: ecoinvent_38_cutoff_3011_with_methods__locations_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__locations_append_input {
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_avg_fields {
  latitude: Float
  longitude: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__locations". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp!]
  code: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  geometry_coordinates: jsonb_comparison_exp
  geometry_geometries: jsonb_comparison_exp
  geometry_type: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  latitude: float8_comparison_exp
  library: String_comparison_exp
  longitude: float8_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_delete_at_path_input {
  geometry_coordinates: [String!]
  geometry_geometries: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_delete_elem_input {
  geometry_coordinates: Int
  geometry_geometries: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_delete_key_input {
  geometry_coordinates: String
  geometry_geometries: String
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_inc_input {
  latitude: float8
  longitude: float8
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_insert_input {
  code: String
  data_name: String
  description: String
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_max_fields {
  code: String
  data_name: String
  description: String
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_min_fields {
  code: String
  data_name: String
  description: String
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_3011_with_methods__locations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__locations!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__locations".
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_order_by {
  code: order_by
  data_name: order_by
  description: order_by
  geometry_coordinates: order_by
  geometry_geometries: order_by
  geometry_type: order_by
  id: order_by
  last_change: order_by
  latitude: order_by
  library: order_by
  longitude: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__locations_prepend_input {
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
enum ecoinvent_38_cutoff_3011_with_methods__locations_select_column {
  """column name"""
  code

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  geometry_coordinates

  """column name"""
  geometry_geometries

  """column name"""
  geometry_type

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  latitude

  """column name"""
  library

  """column name"""
  longitude

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__locations"
"""
input ecoinvent_38_cutoff_3011_with_methods__locations_set_input {
  code: String
  data_name: String
  description: String
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_stddev_fields {
  latitude: Float
  longitude: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_stddev_pop_fields {
  latitude: Float
  longitude: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_stddev_samp_fields {
  latitude: Float
  longitude: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_sum_fields {
  latitude: float8
  longitude: float8
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_var_pop_fields {
  latitude: Float
  longitude: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_var_samp_fields {
  latitude: Float
  longitude: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_3011_with_methods__locations_variance_fields {
  latitude: Float
  longitude: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_3011_with_methods__nw_sets {
  data_name: String
  description: String
  factors(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__nw_sets!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__nw_sets_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__nw_sets_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_append_input {
  factors: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__nw_sets". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  factors: jsonb_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  version: String_comparison_exp
  weighted_score_unit: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_delete_at_path_input {
  factors: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_delete_elem_input {
  factors: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_delete_key_input {
  factors: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_insert_input {
  data_name: String
  description: String
  factors: jsonb
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__nw_sets_max_fields {
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__nw_sets_min_fields {
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_3011_with_methods__nw_sets_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__nw_sets!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__nw_sets".
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_order_by {
  data_name: order_by
  description: order_by
  factors: order_by
  id: order_by
  last_change: order_by
  version: order_by
  weighted_score_unit: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_prepend_input {
  factors: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
enum ecoinvent_38_cutoff_3011_with_methods__nw_sets_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  factors

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  version

  """column name"""
  weighted_score_unit
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
"""
input ecoinvent_38_cutoff_3011_with_methods__nw_sets_set_input {
  data_name: String
  description: String
  factors: jsonb
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_3011_with_methods__parameters {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String!
  input_parameter: Boolean
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__parameters!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate_fields {
  avg: ecoinvent_38_cutoff_3011_with_methods__parameters_avg_fields
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__parameters_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__parameters_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__parameters_min_fields
  stddev: ecoinvent_38_cutoff_3011_with_methods__parameters_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_3011_with_methods__parameters_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_3011_with_methods__parameters_stddev_samp_fields
  sum: ecoinvent_38_cutoff_3011_with_methods__parameters_sum_fields
  var_pop: ecoinvent_38_cutoff_3011_with_methods__parameters_var_pop_fields
  var_samp: ecoinvent_38_cutoff_3011_with_methods__parameters_var_samp_fields
  variance: ecoinvent_38_cutoff_3011_with_methods__parameters_variance_fields
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_avg_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__parameters". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  distribution_type: String_comparison_exp
  formula: String_comparison_exp
  id: String_comparison_exp
  input_parameter: Boolean_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  parameter1_formula: String_comparison_exp
  parameter1_value: float8_comparison_exp
  parameter2_formula: String_comparison_exp
  parameter2_value: float8_comparison_exp
  parameter3_formula: String_comparison_exp
  parameter3_value: float8_comparison_exp
  parameter_scope: String_comparison_exp
  tags: String_comparison_exp
  value: float8_comparison_exp
  version: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
input ecoinvent_38_cutoff_3011_with_methods__parameters_inc_input {
  parameter1_value: float8
  parameter2_value: float8
  parameter3_value: float8
  value: float8
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
input ecoinvent_38_cutoff_3011_with_methods__parameters_insert_input {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  input_parameter: Boolean
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_max_fields {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_min_fields {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__parameters!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__parameters".
"""
input ecoinvent_38_cutoff_3011_with_methods__parameters_order_by {
  data_name: order_by
  description: order_by
  distribution_type: order_by
  formula: order_by
  id: order_by
  input_parameter: order_by
  last_change: order_by
  library: order_by
  parameter1_formula: order_by
  parameter1_value: order_by
  parameter2_formula: order_by
  parameter2_value: order_by
  parameter3_formula: order_by
  parameter3_value: order_by
  parameter_scope: order_by
  tags: order_by
  value: order_by
  version: order_by
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
enum ecoinvent_38_cutoff_3011_with_methods__parameters_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  distribution_type

  """column name"""
  formula

  """column name"""
  id

  """column name"""
  input_parameter

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  parameter1_formula

  """column name"""
  parameter1_value

  """column name"""
  parameter2_formula

  """column name"""
  parameter2_value

  """column name"""
  parameter3_formula

  """column name"""
  parameter3_value

  """column name"""
  parameter_scope

  """column name"""
  tags

  """column name"""
  value

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__parameters"
"""
input ecoinvent_38_cutoff_3011_with_methods__parameters_set_input {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  input_parameter: Boolean
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_stddev_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_stddev_pop_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_stddev_samp_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_sum_fields {
  parameter1_value: float8
  parameter2_value: float8
  parameter3_value: float8
  value: float8
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_var_pop_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_var_samp_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_3011_with_methods__parameters_variance_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_3011_with_methods__processes {
  allocation_factors(
    """JSON select path"""
    path: String
  ): jsonb
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  exchanges(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
  infrastructure_process: Boolean
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  parameters(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_completeness_description: String
  process_documentation_copyright: Boolean
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_sources(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_3011_with_methods__processes_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__processes_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__processes!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_3011_with_methods__processes_aggregate_fields {
  avg: ecoinvent_38_cutoff_3011_with_methods__processes_avg_fields
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__processes_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__processes_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__processes_min_fields
  stddev: ecoinvent_38_cutoff_3011_with_methods__processes_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_3011_with_methods__processes_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_3011_with_methods__processes_stddev_samp_fields
  sum: ecoinvent_38_cutoff_3011_with_methods__processes_sum_fields
  var_pop: ecoinvent_38_cutoff_3011_with_methods__processes_var_pop_fields
  var_samp: ecoinvent_38_cutoff_3011_with_methods__processes_var_samp_fields
  variance: ecoinvent_38_cutoff_3011_with_methods__processes_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__processes_append_input {
  allocation_factors: jsonb
  category_path: jsonb
  exchanges: jsonb
  parameters: jsonb
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_publication_category_path: jsonb
  process_documentation_reviewer_category_path: jsonb
  process_documentation_sources: jsonb
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_avg_fields {
  last_internal_id: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__processes". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp!]
  allocation_factors: jsonb_comparison_exp
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  default_allocation_method: String_comparison_exp
  description: String_comparison_exp
  dq_entry: String_comparison_exp
  exchange_dq_system_id: String_comparison_exp
  exchange_dq_system_name: String_comparison_exp
  exchanges: jsonb_comparison_exp
  id: String_comparison_exp
  infrastructure_process: Boolean_comparison_exp
  last_change: timestamptz_comparison_exp
  last_internal_id: Int_comparison_exp
  library: String_comparison_exp
  location_id: String_comparison_exp
  location_name: String_comparison_exp
  parameters: jsonb_comparison_exp
  process_documentation_completeness_description: String_comparison_exp
  process_documentation_copyright: Boolean_comparison_exp
  process_documentation_creation_date: timestamptz_comparison_exp
  process_documentation_data_collection_description: String_comparison_exp
  process_documentation_data_documentor_category_path: jsonb_comparison_exp
  process_documentation_data_documentor_id: String_comparison_exp
  process_documentation_data_documentor_name: String_comparison_exp
  process_documentation_data_generator_category_path: jsonb_comparison_exp
  process_documentation_data_generator_id: String_comparison_exp
  process_documentation_data_generator_name: String_comparison_exp
  process_documentation_data_selection_description: String_comparison_exp
  process_documentation_data_set_owner_category_path: jsonb_comparison_exp
  process_documentation_data_set_owner_id: String_comparison_exp
  process_documentation_data_set_owner_name: String_comparison_exp
  process_documentation_data_treatment_description: String_comparison_exp
  process_documentation_geography_description: String_comparison_exp
  process_documentation_intended_application: String_comparison_exp
  process_documentation_inventory_method_description: String_comparison_exp
  process_documentation_modeling_constants_description: String_comparison_exp
  process_documentation_project_description: String_comparison_exp
  process_documentation_publication_category_path: jsonb_comparison_exp
  process_documentation_publication_id: String_comparison_exp
  process_documentation_publication_name: String_comparison_exp
  process_documentation_restrictions_description: String_comparison_exp
  process_documentation_review_details: String_comparison_exp
  process_documentation_reviewer_category_path: jsonb_comparison_exp
  process_documentation_reviewer_id: String_comparison_exp
  process_documentation_reviewer_name: String_comparison_exp
  process_documentation_sampling_description: String_comparison_exp
  process_documentation_sources: jsonb_comparison_exp
  process_documentation_technology_description: String_comparison_exp
  process_documentation_time_description: String_comparison_exp
  process_documentation_valid_from: timestamptz_comparison_exp
  process_documentation_valid_until: timestamptz_comparison_exp
  process_type: String_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_delete_at_path_input {
  allocation_factors: [String!]
  category_path: [String!]
  exchanges: [String!]
  parameters: [String!]
  process_documentation_data_documentor_category_path: [String!]
  process_documentation_data_generator_category_path: [String!]
  process_documentation_data_set_owner_category_path: [String!]
  process_documentation_publication_category_path: [String!]
  process_documentation_reviewer_category_path: [String!]
  process_documentation_sources: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_delete_elem_input {
  allocation_factors: Int
  category_path: Int
  exchanges: Int
  parameters: Int
  process_documentation_data_documentor_category_path: Int
  process_documentation_data_generator_category_path: Int
  process_documentation_data_set_owner_category_path: Int
  process_documentation_publication_category_path: Int
  process_documentation_reviewer_category_path: Int
  process_documentation_sources: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_delete_key_input {
  allocation_factors: String
  category_path: String
  exchanges: String
  parameters: String
  process_documentation_data_documentor_category_path: String
  process_documentation_data_generator_category_path: String
  process_documentation_data_set_owner_category_path: String
  process_documentation_publication_category_path: String
  process_documentation_reviewer_category_path: String
  process_documentation_sources: String
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_inc_input {
  last_internal_id: Int
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_insert_input {
  allocation_factors: jsonb
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  exchanges: jsonb
  id: String
  infrastructure_process: Boolean
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  parameters: jsonb
  process_documentation_completeness_description: String
  process_documentation_copyright: Boolean
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_category_path: jsonb
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_category_path: jsonb
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_sources: jsonb
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  id: String
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  process_documentation_completeness_description: String
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  id: String
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  process_documentation_completeness_description: String
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_3011_with_methods__processes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__processes!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__processes".
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_order_by {
  allocation_factors: order_by
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  default_allocation_method: order_by
  description: order_by
  dq_entry: order_by
  exchange_dq_system_id: order_by
  exchange_dq_system_name: order_by
  exchanges: order_by
  id: order_by
  infrastructure_process: order_by
  last_change: order_by
  last_internal_id: order_by
  library: order_by
  location_id: order_by
  location_name: order_by
  parameters: order_by
  process_documentation_completeness_description: order_by
  process_documentation_copyright: order_by
  process_documentation_creation_date: order_by
  process_documentation_data_collection_description: order_by
  process_documentation_data_documentor_category_path: order_by
  process_documentation_data_documentor_id: order_by
  process_documentation_data_documentor_name: order_by
  process_documentation_data_generator_category_path: order_by
  process_documentation_data_generator_id: order_by
  process_documentation_data_generator_name: order_by
  process_documentation_data_selection_description: order_by
  process_documentation_data_set_owner_category_path: order_by
  process_documentation_data_set_owner_id: order_by
  process_documentation_data_set_owner_name: order_by
  process_documentation_data_treatment_description: order_by
  process_documentation_geography_description: order_by
  process_documentation_intended_application: order_by
  process_documentation_inventory_method_description: order_by
  process_documentation_modeling_constants_description: order_by
  process_documentation_project_description: order_by
  process_documentation_publication_category_path: order_by
  process_documentation_publication_id: order_by
  process_documentation_publication_name: order_by
  process_documentation_restrictions_description: order_by
  process_documentation_review_details: order_by
  process_documentation_reviewer_category_path: order_by
  process_documentation_reviewer_id: order_by
  process_documentation_reviewer_name: order_by
  process_documentation_sampling_description: order_by
  process_documentation_sources: order_by
  process_documentation_technology_description: order_by
  process_documentation_time_description: order_by
  process_documentation_valid_from: order_by
  process_documentation_valid_until: order_by
  process_type: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__processes_prepend_input {
  allocation_factors: jsonb
  category_path: jsonb
  exchanges: jsonb
  parameters: jsonb
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_publication_category_path: jsonb
  process_documentation_reviewer_category_path: jsonb
  process_documentation_sources: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
enum ecoinvent_38_cutoff_3011_with_methods__processes_select_column {
  """column name"""
  allocation_factors

  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  default_allocation_method

  """column name"""
  description

  """column name"""
  dq_entry

  """column name"""
  exchange_dq_system_id

  """column name"""
  exchange_dq_system_name

  """column name"""
  exchanges

  """column name"""
  id

  """column name"""
  infrastructure_process

  """column name"""
  last_change

  """column name"""
  last_internal_id

  """column name"""
  library

  """column name"""
  location_id

  """column name"""
  location_name

  """column name"""
  parameters

  """column name"""
  process_documentation_completeness_description

  """column name"""
  process_documentation_copyright

  """column name"""
  process_documentation_creation_date

  """column name"""
  process_documentation_data_collection_description

  """column name"""
  process_documentation_data_documentor_category_path

  """column name"""
  process_documentation_data_documentor_id

  """column name"""
  process_documentation_data_documentor_name

  """column name"""
  process_documentation_data_generator_category_path

  """column name"""
  process_documentation_data_generator_id

  """column name"""
  process_documentation_data_generator_name

  """column name"""
  process_documentation_data_selection_description

  """column name"""
  process_documentation_data_set_owner_category_path

  """column name"""
  process_documentation_data_set_owner_id

  """column name"""
  process_documentation_data_set_owner_name

  """column name"""
  process_documentation_data_treatment_description

  """column name"""
  process_documentation_geography_description

  """column name"""
  process_documentation_intended_application

  """column name"""
  process_documentation_inventory_method_description

  """column name"""
  process_documentation_modeling_constants_description

  """column name"""
  process_documentation_project_description

  """column name"""
  process_documentation_publication_category_path

  """column name"""
  process_documentation_publication_id

  """column name"""
  process_documentation_publication_name

  """column name"""
  process_documentation_restrictions_description

  """column name"""
  process_documentation_review_details

  """column name"""
  process_documentation_reviewer_category_path

  """column name"""
  process_documentation_reviewer_id

  """column name"""
  process_documentation_reviewer_name

  """column name"""
  process_documentation_sampling_description

  """column name"""
  process_documentation_sources

  """column name"""
  process_documentation_technology_description

  """column name"""
  process_documentation_time_description

  """column name"""
  process_documentation_valid_from

  """column name"""
  process_documentation_valid_until

  """column name"""
  process_type

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__processes"
"""
input ecoinvent_38_cutoff_3011_with_methods__processes_set_input {
  allocation_factors: jsonb
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  exchanges: jsonb
  id: String
  infrastructure_process: Boolean
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  parameters: jsonb
  process_documentation_completeness_description: String
  process_documentation_copyright: Boolean
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_category_path: jsonb
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_category_path: jsonb
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_sources: jsonb
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_stddev_fields {
  last_internal_id: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_stddev_pop_fields {
  last_internal_id: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_stddev_samp_fields {
  last_internal_id: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_sum_fields {
  last_internal_id: Int
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_var_pop_fields {
  last_internal_id: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_var_samp_fields {
  last_internal_id: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_3011_with_methods__processes_variance_fields {
  last_internal_id: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__sources {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__sources_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__sources_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__sources!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__sources_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__sources_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__sources_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__sources_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__sources_append_input {
  category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__sources". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  external_file: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  text_reference: String_comparison_exp
  url: String_comparison_exp
  version: String_comparison_exp
  year: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_delete_key_input {
  category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__sources_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__sources_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_3011_with_methods__sources_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__sources!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__sources".
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  external_file: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  text_reference: order_by
  url: order_by
  version: order_by
  year: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__sources_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
enum ecoinvent_38_cutoff_3011_with_methods__sources_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  external_file

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  text_reference

  """column name"""
  url

  """column name"""
  version

  """column name"""
  year
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__sources"
"""
input ecoinvent_38_cutoff_3011_with_methods__sources_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_3011_with_methods__unit_groups {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  default_flow_property_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  units(
    """JSON select path"""
    path: String
  ): jsonb
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate {
  aggregate: ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate_fields
  nodes: [ecoinvent_38_cutoff_3011_with_methods__unit_groups!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_3011_with_methods__unit_groups_max_fields
  min: ecoinvent_38_cutoff_3011_with_methods__unit_groups_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_append_input {
  category_path: jsonb
  default_flow_property_category_path: jsonb
  units: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_3011_with_methods__unit_groups". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp {
  _and: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp!]
  _not: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp
  _or: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  default_flow_property_category_path: jsonb_comparison_exp
  default_flow_property_id: String_comparison_exp
  default_flow_property_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  units: jsonb_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_delete_at_path_input {
  category_path: [String!]
  default_flow_property_category_path: [String!]
  units: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_delete_elem_input {
  category_path: Int
  default_flow_property_category_path: Int
  units: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_delete_key_input {
  category_path: String
  default_flow_property_category_path: String
  units: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_flow_property_category_path: jsonb
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  units: jsonb
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_3011_with_methods__unit_groups_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_3011_with_methods__unit_groups_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_3011_with_methods__unit_groups_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_3011_with_methods__unit_groups!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_3011_with_methods__unit_groups".
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  default_flow_property_category_path: order_by
  default_flow_property_id: order_by
  default_flow_property_name: order_by
  description: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  units: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_prepend_input {
  category_path: jsonb
  default_flow_property_category_path: jsonb
  units: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
enum ecoinvent_38_cutoff_3011_with_methods__unit_groups_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  default_flow_property_category_path

  """column name"""
  default_flow_property_id

  """column name"""
  default_flow_property_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  units

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
"""
input ecoinvent_38_cutoff_3011_with_methods__unit_groups_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_flow_property_category_path: jsonb
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  units: jsonb
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__actors {
  address: String
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__actors!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__actors_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__actors_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_append_input {
  category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__actors". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp!]
  address: String_comparison_exp
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  city: String_comparison_exp
  country: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  email: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  telefax: String_comparison_exp
  telephone: String_comparison_exp
  version: String_comparison_exp
  website: String_comparison_exp
  zip_code: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_delete_key_input {
  category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_insert_input {
  address: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__actors_max_fields {
  address: String
  category_id: String
  category_name: String
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__actors_min_fields {
  address: String
  category_id: String
  category_name: String
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__actors_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__actors!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__actors".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_order_by {
  address: order_by
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  city: order_by
  country: order_by
  data_name: order_by
  description: order_by
  email: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  telefax: order_by
  telephone: order_by
  version: order_by
  website: order_by
  zip_code: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__actors_select_column {
  """column name"""
  address

  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  city

  """column name"""
  country

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  email

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  telefax

  """column name"""
  telephone

  """column name"""
  version

  """column name"""
  website

  """column name"""
  zip_code
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__actors_set_input {
  address: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  city: String
  country: String
  data_name: String
  description: String
  email: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  telefax: String
  telephone: String
  version: String
  website: String
  zip_code: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources {
  bin_sources: bytea
  id: String!
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_min_fields
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp!]
  bin_sources: bytea_comparison_exp
  id: String_comparison_exp
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_insert_input {
  bin_sources: bytea
  id: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_max_fields {
  id: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_min_fields {
  id: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_order_by {
  bin_sources: order_by
  id: order_by
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_select_column {
  """column name"""
  bin_sources

  """column name"""
  id
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_set_input {
  bin_sources: bytea
  id: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__categories {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  id: String!
  last_change: timestamptz
  model_type: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__categories!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__categories_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__categories_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_append_input {
  category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__categories". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  model_type: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_delete_key_input {
  category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__categories_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__categories_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__categories_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__categories!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__categories".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  id: order_by
  last_change: order_by
  model_type: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__categories_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  model_type

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__categories_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  model_type: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate_fields {
  avg: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_avg_fields
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_min_fields
  stddev: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_stddev_samp_fields
  sum: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_sum_fields
  var_pop: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_var_pop_fields
  var_samp: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_var_samp_fields
  variance: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_append_input {
  category_path: jsonb
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_avg_fields {
  conversion_factor: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__currencies". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  code: String_comparison_exp
  conversion_factor: float8_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  reference_currency_id: String_comparison_exp
  reference_currency_name: String_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_delete_key_input {
  category_path: String
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_inc_input {
  conversion_factor: float8
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_max_fields {
  category_id: String
  category_name: String
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_min_fields {
  category_id: String
  category_name: String
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__currencies".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  code: order_by
  conversion_factor: order_by
  data_name: order_by
  description: order_by
  id: order_by
  last_change: order_by
  library: order_by
  reference_currency_id: order_by
  reference_currency_name: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__currencies_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  code

  """column name"""
  conversion_factor

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  reference_currency_id

  """column name"""
  reference_currency_name

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__currencies_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  code: String
  conversion_factor: float8
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  reference_currency_id: String
  reference_currency_name: String
  tags: String
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_stddev_fields {
  conversion_factor: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_stddev_pop_fields {
  conversion_factor: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_stddev_samp_fields {
  conversion_factor: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_sum_fields {
  conversion_factor: float8
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_var_pop_fields {
  conversion_factor: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_var_samp_fields {
  conversion_factor: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__currencies_variance_fields {
  conversion_factor: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems {
  data_name: String
  description: String
  has_uncertainties: Boolean
  id: String
  indicators(
    """JSON select path"""
    path: String
  ): json
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_min_fields
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  has_uncertainties: Boolean_comparison_exp
  id: String_comparison_exp
  indicators: json_comparison_exp
  last_change: String_comparison_exp
  source_id: String_comparison_exp
  source_name: String_comparison_exp
  version: String_comparison_exp
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_insert_input {
  data_name: String
  description: String
  has_uncertainties: Boolean
  id: String
  indicators: json
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_max_fields {
  data_name: String
  description: String
  id: String
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_min_fields {
  data_name: String
  description: String
  id: String
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_order_by {
  data_name: order_by
  description: order_by
  has_uncertainties: order_by
  id: order_by
  indicators: order_by
  last_change: order_by
  source_id: order_by
  source_name: order_by
  version: order_by
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  has_uncertainties

  """column name"""
  id

  """column name"""
  indicators

  """column name"""
  last_change

  """column name"""
  source_id

  """column name"""
  source_name

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_set_input {
  data_name: String
  description: String
  has_uncertainties: Boolean
  id: String
  indicators: json
  last_change: String
  source_id: String
  source_name: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  unit_group_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_append_input {
  category_path: jsonb
  unit_group_category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  flow_property_type: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  unit_group_category_path: jsonb_comparison_exp
  unit_group_id: String_comparison_exp
  unit_group_name: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_delete_at_path_input {
  category_path: [String!]
  unit_group_category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_delete_elem_input {
  category_path: Int
  unit_group_category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_delete_key_input {
  category_path: String
  unit_group_category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_category_path: jsonb
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  flow_property_type: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  unit_group_category_path: order_by
  unit_group_id: order_by
  unit_group_name: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_prepend_input {
  category_path: jsonb
  unit_group_category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  flow_property_type

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  unit_group_category_path

  """column name"""
  unit_group_id

  """column name"""
  unit_group_name

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_property_type: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  unit_group_category_path: jsonb
  unit_group_id: String
  unit_group_name: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flows {
  cas: String
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  flow_properties(
    """JSON select path"""
    path: String
  ): jsonb
  flow_type: String
  formula: String
  id: String!
  infrastructure_flow: Boolean
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__flows!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__flows_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__flows_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_append_input {
  category_path: jsonb
  flow_properties: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__flows". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp!]
  cas: String_comparison_exp
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  flow_properties: jsonb_comparison_exp
  flow_type: String_comparison_exp
  formula: String_comparison_exp
  id: String_comparison_exp
  infrastructure_flow: Boolean_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  location_id: String_comparison_exp
  location_name: String_comparison_exp
  synonyms: String_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_delete_at_path_input {
  category_path: [String!]
  flow_properties: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_delete_elem_input {
  category_path: Int
  flow_properties: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_delete_key_input {
  category_path: String
  flow_properties: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_insert_input {
  cas: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_properties: jsonb
  flow_type: String
  formula: String
  id: String
  infrastructure_flow: Boolean
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flows_max_fields {
  cas: String
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flows_min_fields {
  cas: String
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  flow_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__flows_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__flows!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__flows".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_order_by {
  cas: order_by
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  flow_properties: order_by
  flow_type: order_by
  formula: order_by
  id: order_by
  infrastructure_flow: order_by
  last_change: order_by
  library: order_by
  location_id: order_by
  location_name: order_by
  synonyms: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_prepend_input {
  category_path: jsonb
  flow_properties: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__flows_select_column {
  """column name"""
  cas

  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  flow_properties

  """column name"""
  flow_type

  """column name"""
  formula

  """column name"""
  id

  """column name"""
  infrastructure_flow

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  location_id

  """column name"""
  location_name

  """column name"""
  synonyms

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__flows_set_input {
  cas: String
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  flow_properties: jsonb
  flow_type: String
  formula: String
  id: String
  infrastructure_flow: Boolean
  last_change: timestamptz
  library: String
  location_id: String
  location_name: String
  synonyms: String
  tags: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories {
  data_name: String
  description: String
  id: String!
  impact_factors(
    """JSON select path"""
    path: String
  ): jsonb
  reference_unit_name: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_append_input {
  impact_factors: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  impact_factors: jsonb_comparison_exp
  reference_unit_name: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_delete_at_path_input {
  impact_factors: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_delete_elem_input {
  impact_factors: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_delete_key_input {
  impact_factors: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_insert_input {
  data_name: String
  description: String
  id: String
  impact_factors: jsonb
  reference_unit_name: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_max_fields {
  data_name: String
  description: String
  id: String
  reference_unit_name: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_min_fields {
  data_name: String
  description: String
  id: String
  reference_unit_name: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_order_by {
  data_name: order_by
  description: order_by
  id: order_by
  impact_factors: order_by
  reference_unit_name: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_prepend_input {
  impact_factors: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  impact_factors

  """column name"""
  reference_unit_name

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_set_input {
  data_name: String
  description: String
  id: String
  impact_factors: jsonb
  reference_unit_name: String
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String!
  impact_categories(
    """JSON select path"""
    path: String
  ): jsonb
  last_change: timestamptz
  nw_sets(
    """JSON select path"""
    path: String
  ): jsonb
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_append_input {
  impact_categories: jsonb
  nw_sets: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  impact_categories: jsonb_comparison_exp
  last_change: timestamptz_comparison_exp
  nw_sets: jsonb_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_delete_at_path_input {
  impact_categories: [String!]
  nw_sets: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_delete_elem_input {
  impact_categories: Int
  nw_sets: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_delete_key_input {
  impact_categories: String
  nw_sets: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_insert_input {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  impact_categories: jsonb
  last_change: timestamptz
  nw_sets: jsonb
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_order_by {
  category_id: order_by
  category_name: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  id: order_by
  impact_categories: order_by
  last_change: order_by
  nw_sets: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_prepend_input {
  impact_categories: jsonb
  nw_sets: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  impact_categories

  """column name"""
  last_change

  """column name"""
  nw_sets

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_set_input {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  id: String
  impact_categories: jsonb
  last_change: timestamptz
  nw_sets: jsonb
  version: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations {
  code: String
  data_name: String
  description: String
  geometry_coordinates(
    """JSON select path"""
    path: String
  ): jsonb
  geometry_geometries(
    """JSON select path"""
    path: String
  ): jsonb
  geometry_type: String
  id: String!
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__locations!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate_fields {
  avg: ecoinvent_38_cutoff_lci_3011_with_methods__locations_avg_fields
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__locations_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__locations_min_fields
  stddev: ecoinvent_38_cutoff_lci_3011_with_methods__locations_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_lci_3011_with_methods__locations_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_lci_3011_with_methods__locations_stddev_samp_fields
  sum: ecoinvent_38_cutoff_lci_3011_with_methods__locations_sum_fields
  var_pop: ecoinvent_38_cutoff_lci_3011_with_methods__locations_var_pop_fields
  var_samp: ecoinvent_38_cutoff_lci_3011_with_methods__locations_var_samp_fields
  variance: ecoinvent_38_cutoff_lci_3011_with_methods__locations_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_append_input {
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_avg_fields {
  latitude: Float
  longitude: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__locations". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp!]
  code: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  geometry_coordinates: jsonb_comparison_exp
  geometry_geometries: jsonb_comparison_exp
  geometry_type: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  latitude: float8_comparison_exp
  library: String_comparison_exp
  longitude: float8_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_delete_at_path_input {
  geometry_coordinates: [String!]
  geometry_geometries: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_delete_elem_input {
  geometry_coordinates: Int
  geometry_geometries: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_delete_key_input {
  geometry_coordinates: String
  geometry_geometries: String
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_inc_input {
  latitude: float8
  longitude: float8
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_insert_input {
  code: String
  data_name: String
  description: String
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_max_fields {
  code: String
  data_name: String
  description: String
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_min_fields {
  code: String
  data_name: String
  description: String
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__locations!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__locations".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_order_by {
  code: order_by
  data_name: order_by
  description: order_by
  geometry_coordinates: order_by
  geometry_geometries: order_by
  geometry_type: order_by
  id: order_by
  last_change: order_by
  latitude: order_by
  library: order_by
  longitude: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_prepend_input {
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__locations_select_column {
  """column name"""
  code

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  geometry_coordinates

  """column name"""
  geometry_geometries

  """column name"""
  geometry_type

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  latitude

  """column name"""
  library

  """column name"""
  longitude

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__locations_set_input {
  code: String
  data_name: String
  description: String
  geometry_coordinates: jsonb
  geometry_geometries: jsonb
  geometry_type: String
  id: String
  last_change: timestamptz
  latitude: float8
  library: String
  longitude: float8
  tags: String
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_stddev_fields {
  latitude: Float
  longitude: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_stddev_pop_fields {
  latitude: Float
  longitude: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_stddev_samp_fields {
  latitude: Float
  longitude: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_sum_fields {
  latitude: float8
  longitude: float8
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_var_pop_fields {
  latitude: Float
  longitude: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_var_samp_fields {
  latitude: Float
  longitude: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__locations_variance_fields {
  latitude: Float
  longitude: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets {
  data_name: String
  description: String
  factors(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_append_input {
  factors: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  factors: jsonb_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  version: String_comparison_exp
  weighted_score_unit: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_delete_at_path_input {
  factors: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_delete_elem_input {
  factors: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_delete_key_input {
  factors: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_insert_input {
  data_name: String
  description: String
  factors: jsonb
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_max_fields {
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_min_fields {
  data_name: String
  description: String
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_order_by {
  data_name: order_by
  description: order_by
  factors: order_by
  id: order_by
  last_change: order_by
  version: order_by
  weighted_score_unit: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_prepend_input {
  factors: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  factors

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  version

  """column name"""
  weighted_score_unit
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_set_input {
  data_name: String
  description: String
  factors: jsonb
  id: String
  last_change: timestamptz
  version: String
  weighted_score_unit: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String!
  input_parameter: Boolean
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate_fields {
  avg: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_avg_fields
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_min_fields
  stddev: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_stddev_samp_fields
  sum: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_sum_fields
  var_pop: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_var_pop_fields
  var_samp: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_var_samp_fields
  variance: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_variance_fields
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_avg_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__parameters". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp!]
  data_name: String_comparison_exp
  description: String_comparison_exp
  distribution_type: String_comparison_exp
  formula: String_comparison_exp
  id: String_comparison_exp
  input_parameter: Boolean_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  parameter1_formula: String_comparison_exp
  parameter1_value: float8_comparison_exp
  parameter2_formula: String_comparison_exp
  parameter2_value: float8_comparison_exp
  parameter3_formula: String_comparison_exp
  parameter3_value: float8_comparison_exp
  parameter_scope: String_comparison_exp
  tags: String_comparison_exp
  value: float8_comparison_exp
  version: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__parameters_inc_input {
  parameter1_value: float8
  parameter2_value: float8
  parameter3_value: float8
  value: float8
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__parameters_insert_input {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  input_parameter: Boolean
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_max_fields {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_min_fields {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__parameters".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__parameters_order_by {
  data_name: order_by
  description: order_by
  distribution_type: order_by
  formula: order_by
  id: order_by
  input_parameter: order_by
  last_change: order_by
  library: order_by
  parameter1_formula: order_by
  parameter1_value: order_by
  parameter2_formula: order_by
  parameter2_value: order_by
  parameter3_formula: order_by
  parameter3_value: order_by
  parameter_scope: order_by
  tags: order_by
  value: order_by
  version: order_by
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__parameters_select_column {
  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  distribution_type

  """column name"""
  formula

  """column name"""
  id

  """column name"""
  input_parameter

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  parameter1_formula

  """column name"""
  parameter1_value

  """column name"""
  parameter2_formula

  """column name"""
  parameter2_value

  """column name"""
  parameter3_formula

  """column name"""
  parameter3_value

  """column name"""
  parameter_scope

  """column name"""
  tags

  """column name"""
  value

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__parameters_set_input {
  data_name: String
  description: String
  distribution_type: String
  formula: String
  id: String
  input_parameter: Boolean
  last_change: timestamptz
  library: String
  parameter1_formula: String
  parameter1_value: float8
  parameter2_formula: String
  parameter2_value: float8
  parameter3_formula: String
  parameter3_value: float8
  parameter_scope: String
  tags: String
  value: float8
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_stddev_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_stddev_pop_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_stddev_samp_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_sum_fields {
  parameter1_value: float8
  parameter2_value: float8
  parameter3_value: float8
  value: float8
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_var_pop_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_var_samp_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__parameters_variance_fields {
  parameter1_value: Float
  parameter2_value: Float
  parameter3_value: Float
  value: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes {
  allocation_factors(
    """JSON select path"""
    path: String
  ): jsonb
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  exchanges(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
  infrastructure_process: Boolean
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  parameters(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_completeness_description: String
  process_documentation_copyright: Boolean
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_sources(
    """JSON select path"""
    path: String
  ): jsonb
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__processes!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate_fields {
  avg: ecoinvent_38_cutoff_lci_3011_with_methods__processes_avg_fields
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__processes_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__processes_min_fields
  stddev: ecoinvent_38_cutoff_lci_3011_with_methods__processes_stddev_fields
  stddev_pop: ecoinvent_38_cutoff_lci_3011_with_methods__processes_stddev_pop_fields
  stddev_samp: ecoinvent_38_cutoff_lci_3011_with_methods__processes_stddev_samp_fields
  sum: ecoinvent_38_cutoff_lci_3011_with_methods__processes_sum_fields
  var_pop: ecoinvent_38_cutoff_lci_3011_with_methods__processes_var_pop_fields
  var_samp: ecoinvent_38_cutoff_lci_3011_with_methods__processes_var_samp_fields
  variance: ecoinvent_38_cutoff_lci_3011_with_methods__processes_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_append_input {
  allocation_factors: jsonb
  category_path: jsonb
  exchanges: jsonb
  parameters: jsonb
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_publication_category_path: jsonb
  process_documentation_reviewer_category_path: jsonb
  process_documentation_sources: jsonb
}

"""aggregate avg on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_avg_fields {
  last_internal_id: Float
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__processes". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp!]
  allocation_factors: jsonb_comparison_exp
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  default_allocation_method: String_comparison_exp
  description: String_comparison_exp
  dq_entry: String_comparison_exp
  exchange_dq_system_id: String_comparison_exp
  exchange_dq_system_name: String_comparison_exp
  exchanges: jsonb_comparison_exp
  id: String_comparison_exp
  infrastructure_process: Boolean_comparison_exp
  last_change: timestamptz_comparison_exp
  last_internal_id: Int_comparison_exp
  library: String_comparison_exp
  location_id: String_comparison_exp
  location_name: String_comparison_exp
  parameters: jsonb_comparison_exp
  process_documentation_completeness_description: String_comparison_exp
  process_documentation_copyright: Boolean_comparison_exp
  process_documentation_creation_date: timestamptz_comparison_exp
  process_documentation_data_collection_description: String_comparison_exp
  process_documentation_data_documentor_category_path: jsonb_comparison_exp
  process_documentation_data_documentor_id: String_comparison_exp
  process_documentation_data_documentor_name: String_comparison_exp
  process_documentation_data_generator_category_path: jsonb_comparison_exp
  process_documentation_data_generator_id: String_comparison_exp
  process_documentation_data_generator_name: String_comparison_exp
  process_documentation_data_selection_description: String_comparison_exp
  process_documentation_data_set_owner_category_path: jsonb_comparison_exp
  process_documentation_data_set_owner_id: String_comparison_exp
  process_documentation_data_set_owner_name: String_comparison_exp
  process_documentation_data_treatment_description: String_comparison_exp
  process_documentation_geography_description: String_comparison_exp
  process_documentation_intended_application: String_comparison_exp
  process_documentation_inventory_method_description: String_comparison_exp
  process_documentation_modeling_constants_description: String_comparison_exp
  process_documentation_project_description: String_comparison_exp
  process_documentation_publication_category_path: jsonb_comparison_exp
  process_documentation_publication_id: String_comparison_exp
  process_documentation_publication_name: String_comparison_exp
  process_documentation_restrictions_description: String_comparison_exp
  process_documentation_review_details: String_comparison_exp
  process_documentation_reviewer_category_path: jsonb_comparison_exp
  process_documentation_reviewer_id: String_comparison_exp
  process_documentation_reviewer_name: String_comparison_exp
  process_documentation_sampling_description: String_comparison_exp
  process_documentation_sources: jsonb_comparison_exp
  process_documentation_technology_description: String_comparison_exp
  process_documentation_time_description: String_comparison_exp
  process_documentation_valid_from: timestamptz_comparison_exp
  process_documentation_valid_until: timestamptz_comparison_exp
  process_type: String_comparison_exp
  tags: String_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_delete_at_path_input {
  allocation_factors: [String!]
  category_path: [String!]
  exchanges: [String!]
  parameters: [String!]
  process_documentation_data_documentor_category_path: [String!]
  process_documentation_data_generator_category_path: [String!]
  process_documentation_data_set_owner_category_path: [String!]
  process_documentation_publication_category_path: [String!]
  process_documentation_reviewer_category_path: [String!]
  process_documentation_sources: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_delete_elem_input {
  allocation_factors: Int
  category_path: Int
  exchanges: Int
  parameters: Int
  process_documentation_data_documentor_category_path: Int
  process_documentation_data_generator_category_path: Int
  process_documentation_data_set_owner_category_path: Int
  process_documentation_publication_category_path: Int
  process_documentation_reviewer_category_path: Int
  process_documentation_sources: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_delete_key_input {
  allocation_factors: String
  category_path: String
  exchanges: String
  parameters: String
  process_documentation_data_documentor_category_path: String
  process_documentation_data_generator_category_path: String
  process_documentation_data_set_owner_category_path: String
  process_documentation_publication_category_path: String
  process_documentation_reviewer_category_path: String
  process_documentation_sources: String
}

"""
input type for incrementing numeric columns in table "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_inc_input {
  last_internal_id: Int
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_insert_input {
  allocation_factors: jsonb
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  exchanges: jsonb
  id: String
  infrastructure_process: Boolean
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  parameters: jsonb
  process_documentation_completeness_description: String
  process_documentation_copyright: Boolean
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_category_path: jsonb
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_category_path: jsonb
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_sources: jsonb
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  id: String
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  process_documentation_completeness_description: String
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  id: String
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  process_documentation_completeness_description: String
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__processes!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__processes".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_order_by {
  allocation_factors: order_by
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  default_allocation_method: order_by
  description: order_by
  dq_entry: order_by
  exchange_dq_system_id: order_by
  exchange_dq_system_name: order_by
  exchanges: order_by
  id: order_by
  infrastructure_process: order_by
  last_change: order_by
  last_internal_id: order_by
  library: order_by
  location_id: order_by
  location_name: order_by
  parameters: order_by
  process_documentation_completeness_description: order_by
  process_documentation_copyright: order_by
  process_documentation_creation_date: order_by
  process_documentation_data_collection_description: order_by
  process_documentation_data_documentor_category_path: order_by
  process_documentation_data_documentor_id: order_by
  process_documentation_data_documentor_name: order_by
  process_documentation_data_generator_category_path: order_by
  process_documentation_data_generator_id: order_by
  process_documentation_data_generator_name: order_by
  process_documentation_data_selection_description: order_by
  process_documentation_data_set_owner_category_path: order_by
  process_documentation_data_set_owner_id: order_by
  process_documentation_data_set_owner_name: order_by
  process_documentation_data_treatment_description: order_by
  process_documentation_geography_description: order_by
  process_documentation_intended_application: order_by
  process_documentation_inventory_method_description: order_by
  process_documentation_modeling_constants_description: order_by
  process_documentation_project_description: order_by
  process_documentation_publication_category_path: order_by
  process_documentation_publication_id: order_by
  process_documentation_publication_name: order_by
  process_documentation_restrictions_description: order_by
  process_documentation_review_details: order_by
  process_documentation_reviewer_category_path: order_by
  process_documentation_reviewer_id: order_by
  process_documentation_reviewer_name: order_by
  process_documentation_sampling_description: order_by
  process_documentation_sources: order_by
  process_documentation_technology_description: order_by
  process_documentation_time_description: order_by
  process_documentation_valid_from: order_by
  process_documentation_valid_until: order_by
  process_type: order_by
  tags: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_prepend_input {
  allocation_factors: jsonb
  category_path: jsonb
  exchanges: jsonb
  parameters: jsonb
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_publication_category_path: jsonb
  process_documentation_reviewer_category_path: jsonb
  process_documentation_sources: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__processes_select_column {
  """column name"""
  allocation_factors

  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  default_allocation_method

  """column name"""
  description

  """column name"""
  dq_entry

  """column name"""
  exchange_dq_system_id

  """column name"""
  exchange_dq_system_name

  """column name"""
  exchanges

  """column name"""
  id

  """column name"""
  infrastructure_process

  """column name"""
  last_change

  """column name"""
  last_internal_id

  """column name"""
  library

  """column name"""
  location_id

  """column name"""
  location_name

  """column name"""
  parameters

  """column name"""
  process_documentation_completeness_description

  """column name"""
  process_documentation_copyright

  """column name"""
  process_documentation_creation_date

  """column name"""
  process_documentation_data_collection_description

  """column name"""
  process_documentation_data_documentor_category_path

  """column name"""
  process_documentation_data_documentor_id

  """column name"""
  process_documentation_data_documentor_name

  """column name"""
  process_documentation_data_generator_category_path

  """column name"""
  process_documentation_data_generator_id

  """column name"""
  process_documentation_data_generator_name

  """column name"""
  process_documentation_data_selection_description

  """column name"""
  process_documentation_data_set_owner_category_path

  """column name"""
  process_documentation_data_set_owner_id

  """column name"""
  process_documentation_data_set_owner_name

  """column name"""
  process_documentation_data_treatment_description

  """column name"""
  process_documentation_geography_description

  """column name"""
  process_documentation_intended_application

  """column name"""
  process_documentation_inventory_method_description

  """column name"""
  process_documentation_modeling_constants_description

  """column name"""
  process_documentation_project_description

  """column name"""
  process_documentation_publication_category_path

  """column name"""
  process_documentation_publication_id

  """column name"""
  process_documentation_publication_name

  """column name"""
  process_documentation_restrictions_description

  """column name"""
  process_documentation_review_details

  """column name"""
  process_documentation_reviewer_category_path

  """column name"""
  process_documentation_reviewer_id

  """column name"""
  process_documentation_reviewer_name

  """column name"""
  process_documentation_sampling_description

  """column name"""
  process_documentation_sources

  """column name"""
  process_documentation_technology_description

  """column name"""
  process_documentation_time_description

  """column name"""
  process_documentation_valid_from

  """column name"""
  process_documentation_valid_until

  """column name"""
  process_type

  """column name"""
  tags

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__processes_set_input {
  allocation_factors: jsonb
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_allocation_method: String
  description: String
  dq_entry: String
  exchange_dq_system_id: String
  exchange_dq_system_name: String
  exchanges: jsonb
  id: String
  infrastructure_process: Boolean
  last_change: timestamptz
  last_internal_id: Int
  library: String
  location_id: String
  location_name: String
  parameters: jsonb
  process_documentation_completeness_description: String
  process_documentation_copyright: Boolean
  process_documentation_creation_date: timestamptz
  process_documentation_data_collection_description: String
  process_documentation_data_documentor_category_path: jsonb
  process_documentation_data_documentor_id: String
  process_documentation_data_documentor_name: String
  process_documentation_data_generator_category_path: jsonb
  process_documentation_data_generator_id: String
  process_documentation_data_generator_name: String
  process_documentation_data_selection_description: String
  process_documentation_data_set_owner_category_path: jsonb
  process_documentation_data_set_owner_id: String
  process_documentation_data_set_owner_name: String
  process_documentation_data_treatment_description: String
  process_documentation_geography_description: String
  process_documentation_intended_application: String
  process_documentation_inventory_method_description: String
  process_documentation_modeling_constants_description: String
  process_documentation_project_description: String
  process_documentation_publication_category_path: jsonb
  process_documentation_publication_id: String
  process_documentation_publication_name: String
  process_documentation_restrictions_description: String
  process_documentation_review_details: String
  process_documentation_reviewer_category_path: jsonb
  process_documentation_reviewer_id: String
  process_documentation_reviewer_name: String
  process_documentation_sampling_description: String
  process_documentation_sources: jsonb
  process_documentation_technology_description: String
  process_documentation_time_description: String
  process_documentation_valid_from: timestamptz
  process_documentation_valid_until: timestamptz
  process_type: String
  tags: String
  version: String
}

"""aggregate stddev on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_stddev_fields {
  last_internal_id: Float
}

"""aggregate stddev_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_stddev_pop_fields {
  last_internal_id: Float
}

"""aggregate stddev_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_stddev_samp_fields {
  last_internal_id: Float
}

"""aggregate sum on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_sum_fields {
  last_internal_id: Int
}

"""aggregate var_pop on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_var_pop_fields {
  last_internal_id: Float
}

"""aggregate var_samp on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_var_samp_fields {
  last_internal_id: Float
}

"""aggregate variance on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__processes_variance_fields {
  last_internal_id: Float
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__sources {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__sources!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__sources_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__sources_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_append_input {
  category_path: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__sources". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  description: String_comparison_exp
  external_file: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  text_reference: String_comparison_exp
  url: String_comparison_exp
  version: String_comparison_exp
  year: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_delete_at_path_input {
  category_path: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_delete_elem_input {
  category_path: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_delete_key_input {
  category_path: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__sources_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__sources_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__sources_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__sources!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__sources".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  description: order_by
  external_file: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  text_reference: order_by
  url: order_by
  version: order_by
  year: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_prepend_input {
  category_path: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__sources_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  description

  """column name"""
  external_file

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  text_reference

  """column name"""
  url

  """column name"""
  version

  """column name"""
  year
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__sources_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  description: String
  external_file: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  text_reference: String
  url: String
  version: String
  year: String
}

"""
columns and relationships of "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups {
  category_id: String
  category_name: String
  category_path(
    """JSON select path"""
    path: String
  ): jsonb
  category_type: String
  data_name: String
  default_flow_property_category_path(
    """JSON select path"""
    path: String
  ): jsonb
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String!
  last_change: timestamptz
  library: String
  tags: String
  units(
    """JSON select path"""
    path: String
  ): jsonb
  version: String
}

"""
aggregated selection of "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate {
  aggregate: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate_fields
  nodes: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups!]!
}

"""
aggregate fields of "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate_fields {
  count(columns: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_select_column!], distinct: Boolean): Int!
  max: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_max_fields
  min: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_append_input {
  category_path: jsonb
  default_flow_property_category_path: jsonb
  units: jsonb
}

"""
Boolean expression to filter rows from the table "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups". All fields are combined with a logical 'AND'.
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp {
  _and: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp!]
  _not: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp
  _or: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp!]
  category_id: String_comparison_exp
  category_name: String_comparison_exp
  category_path: jsonb_comparison_exp
  category_type: String_comparison_exp
  data_name: String_comparison_exp
  default_flow_property_category_path: jsonb_comparison_exp
  default_flow_property_id: String_comparison_exp
  default_flow_property_name: String_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  last_change: timestamptz_comparison_exp
  library: String_comparison_exp
  tags: String_comparison_exp
  units: jsonb_comparison_exp
  version: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_delete_at_path_input {
  category_path: [String!]
  default_flow_property_category_path: [String!]
  units: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_delete_elem_input {
  category_path: Int
  default_flow_property_category_path: Int
  units: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_delete_key_input {
  category_path: String
  default_flow_property_category_path: String
  units: String
}

"""
input type for inserting data into table "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_insert_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_flow_property_category_path: jsonb
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  units: jsonb
  version: String
}

"""aggregate max on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_max_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  version: String
}

"""aggregate min on columns"""
type ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_min_fields {
  category_id: String
  category_name: String
  category_type: String
  data_name: String
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  version: String
}

"""
response of any mutation on the table "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
type ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups!]!
}

"""
Ordering options when selecting data from "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups".
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_order_by {
  category_id: order_by
  category_name: order_by
  category_path: order_by
  category_type: order_by
  data_name: order_by
  default_flow_property_category_path: order_by
  default_flow_property_id: order_by
  default_flow_property_name: order_by
  description: order_by
  id: order_by
  last_change: order_by
  library: order_by
  tags: order_by
  units: order_by
  version: order_by
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_prepend_input {
  category_path: jsonb
  default_flow_property_category_path: jsonb
  units: jsonb
}

"""
select columns of table "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
enum ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_select_column {
  """column name"""
  category_id

  """column name"""
  category_name

  """column name"""
  category_path

  """column name"""
  category_type

  """column name"""
  data_name

  """column name"""
  default_flow_property_category_path

  """column name"""
  default_flow_property_id

  """column name"""
  default_flow_property_name

  """column name"""
  description

  """column name"""
  id

  """column name"""
  last_change

  """column name"""
  library

  """column name"""
  tags

  """column name"""
  units

  """column name"""
  version
}

"""
input type for updating data in table "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
"""
input ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_set_input {
  category_id: String
  category_name: String
  category_path: jsonb
  category_type: String
  data_name: String
  default_flow_property_category_path: jsonb
  default_flow_property_id: String
  default_flow_property_name: String
  description: String
  id: String
  last_change: timestamptz
  library: String
  tags: String
  units: jsonb
  version: String
}

scalar float8

input float8_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _cast: float8_cast_exp
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

scalar json

input json_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'.
"""
input json_comparison_exp {
  _cast: json_cast_exp
  _eq: json
  _gt: json
  _gte: json
  _in: [json!]
  _is_null: Boolean
  _lt: json
  _lte: json
  _neq: json
  _nin: [json!]
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__actors(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__actors_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__bin_sources(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__bin_sources_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__categories(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__categories_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__currencies(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__currencies_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__dq_systems(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__dq_systems_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__flow_properties(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__flow_properties_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__flows(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__flows_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__lcia_categories(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_categories_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__lcia_methods(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_methods_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__locations(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__locations_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__nw_sets(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__nw_sets_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__parameters(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__parameters_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__processes(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__processes_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__sources(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__sources_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  delete_ecoinvent_38_cutoff_3011_with_methods__unit_groups(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__unit_groups_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__actors(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__actors_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__categories(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__categories_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__currencies(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__currencies_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__flows(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flows_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__locations(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__locations_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__parameters(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__parameters_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__processes(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__processes_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__sources(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__sources_mutation_response

  """
  delete data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  delete_ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups(
    """filter the rows which have to be deleted"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_mutation_response

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__actors(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__actors_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__actors_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__actors_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__actors_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__actors

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__bin_sources(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__bin_sources_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__bin_sources_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__bin_sources_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__bin_sources

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__categories(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__categories_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__categories_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__categories_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__categories_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__categories

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__currencies(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__currencies_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__currencies_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__currencies_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__currencies_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__currencies

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__dq_systems(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__dq_systems_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__dq_systems_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__dq_systems_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__dq_systems

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__flow_properties(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__flow_properties_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__flow_properties_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__flow_properties_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__flow_properties

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__flows(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__flows_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__flows_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__flows_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__flows_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__flows

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__lcia_categories(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_categories_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__lcia_categories_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_categories

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__lcia_methods(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_methods_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__lcia_methods_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_methods

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__locations(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__locations_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__locations_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__locations_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__locations_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__locations

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__nw_sets(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__nw_sets_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__nw_sets_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__nw_sets_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__nw_sets

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__parameters(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__parameters_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__parameters_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__parameters_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__parameters_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__parameters

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__processes(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__processes_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__processes_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__processes_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__processes_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__processes

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__sources(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__sources_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__sources_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__sources_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__sources_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__sources

  """
  insert data into the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__unit_groups(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_insert_input!]!
  ): ecoinvent_38_cutoff_3011_with_methods__unit_groups_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  insert_ecoinvent_38_cutoff_3011_with_methods__unit_groups_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_3011_with_methods__unit_groups_insert_input!
  ): ecoinvent_38_cutoff_3011_with_methods__unit_groups

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__actors(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__actors_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__actors_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__actors_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__actors

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__categories(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__categories_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__categories_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__categories_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__categories

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__currencies(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__currencies_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__currencies_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__currencies

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__flows(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flows_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__flows_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__flows_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flows

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__locations(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__locations_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__locations_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__locations_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__locations

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__parameters(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__parameters_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__parameters_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__parameters

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__processes(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__processes_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__processes_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__processes_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__processes

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__sources(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__sources_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__sources_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__sources_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__sources

  """
  insert data into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups(
    """the rows to be inserted"""
    objects: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_insert_input!]!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_mutation_response

  """
  insert a single row into the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  insert_ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_one(
    """the row to be inserted"""
    object: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_insert_input!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__actors(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__actors_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__actors_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__actors_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__actors_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__actors_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__actors_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__actors_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__bin_sources(
    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__bin_sources_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__bin_sources_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__categories(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__categories_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__categories_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__categories_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__categories_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__categories_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__categories_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__categories_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__currencies(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__currencies_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__currencies_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__currencies_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__currencies_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_3011_with_methods__currencies_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__currencies_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__currencies_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__currencies_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__dq_systems(
    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__dq_systems_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__dq_systems_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__flow_properties(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__flow_properties_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__flow_properties_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__flow_properties_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__flow_properties_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__flow_properties_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__flow_properties_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__flow_properties_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__flows(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__flows_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__flows_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__flows_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__flows_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__flows_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__flows_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__flows_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__lcia_categories(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_categories_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__lcia_methods(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_methods_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__locations(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__locations_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__locations_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__locations_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__locations_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_3011_with_methods__locations_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__locations_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__locations_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__locations_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__nw_sets(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__nw_sets_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__nw_sets_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__nw_sets_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__nw_sets_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__nw_sets_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__nw_sets_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__nw_sets_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__parameters(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_3011_with_methods__parameters_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__parameters_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__parameters_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__processes(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__processes_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__processes_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__processes_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__processes_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_3011_with_methods__processes_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__processes_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__processes_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__processes_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__sources(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__sources_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__sources_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__sources_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__sources_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__sources_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__sources_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__sources_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  update_ecoinvent_38_cutoff_3011_with_methods__unit_groups(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_3011_with_methods__unit_groups_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_3011_with_methods__unit_groups_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_3011_with_methods__unit_groups_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_3011_with_methods__unit_groups_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_3011_with_methods__unit_groups_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_3011_with_methods__unit_groups_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp!
  ): ecoinvent_38_cutoff_3011_with_methods__unit_groups_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__actors(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__actors_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__actors_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__actors_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__actors_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__actors_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__actors_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__actors_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources(
    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__categories(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__categories_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__categories_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__categories_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__categories_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__categories_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__categories_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__categories_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__currencies(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__currencies_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems(
    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__flows(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__flows_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__flows_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__flows_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__flows_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__flows_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__flows_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flows_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__locations(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__locations_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__locations_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__locations_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__locations_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_lci_3011_with_methods__locations_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__locations_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__locations_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__locations_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__parameters(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__parameters_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__processes(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__processes_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__processes_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__processes_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__processes_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: ecoinvent_38_cutoff_lci_3011_with_methods__processes_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__processes_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__processes_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__processes_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__sources(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__sources_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__sources_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__sources_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__sources_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__sources_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__sources_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__sources_mutation_response

  """
  update data of the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  update_ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_set_input

    """filter the rows which have to be updated"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp!
  ): ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_mutation_response
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_3011_with_methods__actors(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__actors!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_3011_with_methods__actors_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__actors_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__bin_sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__bin_sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_3011_with_methods__currencies(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__currencies!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_3011_with_methods__dq_systems(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__dq_systems!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_3011_with_methods__flow_properties(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__flow_properties!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_3011_with_methods__flows(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__flows!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_3011_with_methods__flows_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__flows_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__lcia_categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_methods(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__lcia_methods!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_3011_with_methods__locations(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__locations!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_3011_with_methods__locations_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__locations_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_3011_with_methods__nw_sets(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__nw_sets!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_3011_with_methods__parameters(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__parameters!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_3011_with_methods__processes(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__processes!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_3011_with_methods__processes_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__processes_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_3011_with_methods__unit_groups(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__unit_groups!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__actors(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__actors!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__currencies(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__currencies!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flows(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__flows!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__locations(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__locations!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__parameters(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__parameters!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__processes(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__processes!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate!
}

type subscription_root {
  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_3011_with_methods__actors(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__actors!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_3011_with_methods__actors_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__actors_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__actors_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__bin_sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__bin_sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__bin_sources_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__bin_sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__categories_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_3011_with_methods__currencies(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__currencies!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__currencies_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__currencies_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_3011_with_methods__dq_systems(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__dq_systems!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__dq_systems_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__dq_systems_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_3011_with_methods__flow_properties(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__flow_properties!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flow_properties_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__flow_properties_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_3011_with_methods__flows(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__flows!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_3011_with_methods__flows_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__flows_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__flows_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__lcia_categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_categories_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_methods(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__lcia_methods!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__lcia_methods_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__lcia_methods_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_3011_with_methods__locations(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__locations!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_3011_with_methods__locations_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__locations_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__locations_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_3011_with_methods__nw_sets(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__nw_sets!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__nw_sets_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__nw_sets_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_3011_with_methods__parameters(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__parameters!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__parameters_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__parameters_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_3011_with_methods__processes(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__processes!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_3011_with_methods__processes_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__processes_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__processes_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_3011_with_methods__sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__sources_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_3011_with_methods__unit_groups(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp
  ): [ecoinvent_38_cutoff_3011_with_methods__unit_groups!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_3011_with_methods__unit_groups_bool_exp
  ): ecoinvent_38_cutoff_3011_with_methods__unit_groups_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__actors(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__actors!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__actors"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__actors_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__actors_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__actors_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__bin_sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__categories_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__currencies(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__currencies!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__currencies"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__currencies_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__currencies_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__currencies_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__dq_systems_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flow_properties_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flows(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__flows!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__flows"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__flows_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__flows_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__flows_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_categories_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__lcia_methods_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__locations(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__locations!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__locations"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__locations_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__locations_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__locations_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__nw_sets_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__parameters(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__parameters!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__parameters"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__parameters_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__parameters_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__parameters_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__processes(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__processes!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__processes"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__processes_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__processes_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__processes_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__sources(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__sources!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__sources"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__sources_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__sources_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__sources_aggregate!

  """
  fetch data from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp
  ): [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups!]!

  """
  fetch aggregated fields from the table: "ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups"
  """
  ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_order_by!]

    """filter the rows returned"""
    where: ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_bool_exp
  ): ecoinvent_38_cutoff_lci_3011_with_methods__unit_groups_aggregate!
}

scalar timestamptz

input timestamptz_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _cast: timestamptz_cast_exp
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

type Book {
  title: String
  author: String
}

type Query {
  books: [Book]
}
